// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[6..8], a = RAM0, b = RAM1, c = RAM2, d = RAM3, e = RAM4, f = RAM5, g = RAM6, h = RAM7);
    
    RAM64(in[0..15] = in[0..15], load = RAM0, address[0..5] = address[0..5], out[0..15] = out0);
    RAM64(in[0..15] = in[0..15], load = RAM1, address[0..5] = address[0..5], out[0..15] = out1);
    RAM64(in[0..15] = in[0..15], load = RAM2, address[0..5] = address[0..5], out[0..15] = out2);
    RAM64(in[0..15] = in[0..15], load = RAM3, address[0..5] = address[0..5], out[0..15] = out3);
    RAM64(in[0..15] = in[0..15], load = RAM4, address[0..5] = address[0..5], out[0..15] = out4);
    RAM64(in[0..15] = in[0..15], load = RAM5, address[0..5] = address[0..5], out[0..15] = out5);
    RAM64(in[0..15] = in[0..15], load = RAM6, address[0..5] = address[0..5], out[0..15] = out6);
    RAM64(in[0..15] = in[0..15], load = RAM7, address[0..5] = address[0..5], out[0..15] = out7);
    
    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7, sel = address[6..8], out[0..15] = out[0..15]);
}